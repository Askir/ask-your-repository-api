version: 2
jobs:
  test:
    docker:
      - image: circleci/python:3.7
        environment:
          NEO4J_URL: bolt://:@localhost:7687
      - image: neo4j:3.4.5
        environment:
          NEO4J_AUTH: none
          NEO4J_dbms_memory_pagecache_size: 100M
    steps:
      - checkout
      - run: sudo pip install poetry && poetry install
      - run: poetry run shovel utils.download_wordkit
      - run: poetry run neomodel_install_labels application application.models --db bolt://:@localhost:7687
      - run: poetry run coverage run --source=application -m mamba.cli specs
      - run: poetry run coveralls
  lint:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run: sudo pip install poetry && poetry install
      - run: poetry run flake8 ./
      - run: poetry run black --check .
  e2e:
    machine:
      docker_layer_caching: true
    environment:
      COMPOSE_FILE: .circleci/docker-compose.ci.yml
    steps:
      - checkout
      - run: docker-compose pull jona
      - run: docker-compose build elija
      - run: docker-compose up -d
      - run: docker-compose exec jona dockerize -wait http://elija:5000 -timeout 1m
      - run: docker-compose exec jona yarn cypress run
      - store_artifacts:
          path: /app/cypress/screenshots
          destination: e2e-screenshots
      - store_artifacts:
          path: /app/cypress/videos
          destination: e2e-videos
  build:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - setup_remote_docker
      - run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      - run: docker build -t bp2018hg1/elija:$CIRCLE_WORKFLOW_ID -t bp2018hg1/elija:latest .
      - run: docker push bp2018hg1/elija:$CIRCLE_WORKFLOW_ID
      - run: docker push bp2018hg1/elija:latest
  deploy_staging:
    machine: true
    steps:
      - add_ssh_keys:
          fingerprints:
            - $STAGING_DEPLOY_FINGERPRINT
      - run: ssh root@$STAGING_DEPLOY_HOST "cd $STAGING_DEPLOY_HOME; ./deploy elija bp2018hg1/elija:$CIRCLE_WORKFLOW_ID"
  deploy_production:
    machine: true
    steps:
      - add_ssh_keys:
          fingerprints:
            - $PRODUCTION_DEPLOY_FINGERPRINT
      - run: ssh root@$PRODUCTION_DEPLOY_HOST "cd $PRODUCTION_DEPLOY_HOME; ./deploy elija bp2018hg1/elija:$CIRCLE_WORKFLOW_ID"

workflows:
  version: 2
  pipeline:
    jobs:
      - test
      - lint
      - e2e
      - build:
          requires:
            - test
            - lint
            - e2e
          filters:
            branches:
              only: master
      - deploy_staging:
          requires:
            - build
          filters:
            branches:
              only: master
      - hold_production_deploy:
          type: approval
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy_production:
          requires:
            - hold_production_deploy
          filters:
            branches:
              only: master
